plugins {
    id 'java'
    id "com.github.node-gradle.node" version '3.3.0'
    id 'com.enonic.xp.app' version '3.1.0'
    id 'no.item.xp.codegen' version '2.0.1'
    id 'maven-publish'
}

app {
    name = "${appName}"
    displayName = "${appDisplayName}"
    vendorName = "${vendorName}"
    vendorUrl = "${vendorUrl}"
    systemVersion = "${xpVersion}"
}

dependencies {
    implementation "com.enonic.xp:script-api:${xpVersion}"
    include "com.enonic.xp:lib-event:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.lib:lib-static:1.0.2"
    include "com.enonic.lib:lib-guillotine:6.0.5"
    include 'com.enonic.lib:lib-nextjs:0.10.0'
    include "com.enonic.xp:lib-context:${xpVersion}"
    include 'com.enonic.lib:lib-menu:4.1.1'
    include "com.enonic.lib:lib-graphql-playground:0.0.1"
    include "com.enonic.xp:lib-websocket:${xpVersion}"
    include "com.enonic.lib:lib-util:3.0.0"
}

repositories {
    mavenLocal()
    mavenCentral()
    xp.enonicRepo()
}

node {
    download = true
    version = '16.0.0'
}

task npmInstallForce( type: NpmTask ) {
    description = 'Update all project node dependencies'
    args = ['install', '--force']
}

task cleanNode( type: org.gradle.api.tasks.Delete ) {
    delete 'node_modules'
}

task serverWebpack( type: NodeTask, dependsOn:  [ npmInstall, generateTypeScript ] ) {
    environment = [ 'NODE_ENV': nodeEnvironment() ]
    // args = [ '--config', 'webpack.server.config.babel.js', '--color', '--hide-modules' ]
    args = [ '--config', 'webpack.server.config.js', '--color' ]
    description = 'Build server JS.'
    inputs.dir 'src/main'
    outputs.dir "${buildDir}/resources/main"
    script = file( 'node_modules/webpack-cli/bin/cli.js' )
}

processResources {
    include '**/*'
    exclude '**/.gitkeep'
    exclude '**/tsconfig.*.json'
    exclude '**/*.es'
    exclude '**/*.es6'
    exclude '**/*.ts'
    exclude 'assets/js/**/*.js'
    include 'assets/js/bundle.js'
    exclude 'assets/styles/**/*.less'
    exclude 'assets/styles/**/*.sass'
    exclude 'assets/styles/**/*.scss'
    includeEmptyDirs false
}

jar {
    exclude 'assets/styles/**/*.less'
    exclude 'assets/styles/**/*.sass'
    exclude 'assets/styles/**/*.scss'
    exclude 'assets/styles/**/*.js'
    dependsOn += generateTypeScript
    dependsOn += serverWebpack
}

jar.outputs.dir "${buildDir}/resources/main"

def nodeEnvironment() {
    def environments = [ prod : 'production', dev: 'development' ]
    def nodeEnv = environments[hasProperty( 'env' ) ? env : 'prod']
    return nodeEnv != null ? nodeEnv : 'production'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/lienas/")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
